<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simon&#39;s Portfolio</title>
    <link>https://ziggy6792.github.io/</link>
    <description>Recent content on Simon&#39;s Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Apr 2021 22:53:58 +0530</lastBuildDate><atom:link href="https://ziggy6792.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Image Gallery</title>
      <link>https://ziggy6792.github.io/gallery/</link>
      <pubDate>Sat, 25 Jun 2022 18:35:46 +0530</pubDate>
      
      <guid>https://ziggy6792.github.io/gallery/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Alpaca Cup</title>
      <link>https://ziggy6792.github.io/projects/alpaca-cup/</link>
      <pubDate>Sat, 03 Apr 2021 22:53:58 +0530</pubDate>
      
      <guid>https://ziggy6792.github.io/projects/alpaca-cup/</guid>
      <description>Introduction Alpaca Cup is an event management application for hosting and scoring competitions. So far the app has been used exclusively for wakeboarding competitions in Singapore, however we hope that it may be used in other extreme sports in the future (such as skateboarding) or indeed any competition that has a suitable format.
The App serves 2 main purposes;
Sharing event information (who is in each round, when rounds start, who progress to the next round) Sharing results for each round in realtime (i.</description>
    </item>
    
    <item>
      <title>Alpaca Cup Architecture</title>
      <link>https://ziggy6792.github.io/blogs/alpaca-cup-architecture/</link>
      <pubDate>Sat, 03 Apr 2021 22:53:58 +0530</pubDate>
      
      <guid>https://ziggy6792.github.io/blogs/alpaca-cup-architecture/</guid>
      <description>Introduction This article shows an overview of the technology and architecture behind Alpaca Cup, an event management application for hosting and scoring competitions.
Related Articles Click here for introduction and overview of app features Click here for deep dive into the original motivations for this project Tools Amazon Web Services Alpaca Cup makes use of several cloud services and tools provided by Amazon Web Services (AWS), which offer;
High scalability and availability Pay as you use payment model (when no competitions are running the cost of running the application will be negligible) Many libraries, packages and tools available to do much of the heavy lifting involved in building modern, robust applications Here are the key AWS tools being utilized;</description>
    </item>
    
    <item>
      <title>Whire</title>
      <link>https://ziggy6792.github.io/projects/whire/</link>
      <pubDate>Sat, 03 Apr 2021 22:53:58 +0530</pubDate>
      
      <guid>https://ziggy6792.github.io/projects/whire/</guid>
      <description>Introduction Whire is a Singaporean Tech Startup which helps companies hire great people faster through its platform and a top tier community of hiring ambassadors, saving companies hours on pre-screening and outreach efforts as well as thousands of dollars on job ads and agency fees without compromising candidate quality.
Motivation Benjamin Marsili (founder of Whire) hired me to help him build a recruiting network platform for companies to;
Broadcast jobs from LinkedIn (and other sources) Directly interview candidates who are referred members of the Whire network Make hiring decisions and then pay for successfully hired candidates Related Links For more information on Whire visit whire.</description>
    </item>
    
    <item>
      <title>Accessing Amplify GraphQL API objects from Lambda functions</title>
      <link>https://ziggy6792.github.io/blogs/amplify-lambda-dynamodb/</link>
      <pubDate>Fri, 20 Mar 2020 09:07:48 +0700</pubDate>
      
      <guid>https://ziggy6792.github.io/blogs/amplify-lambda-dynamodb/</guid>
      <description>Amplify offers the ability to add Lambda functions which use other configured resources including AppSync API DynamoDB Tables. This article focuses on creating a Lambda function with Amplify CLI that has access to these tables.</description>
    </item>
    
    <item>
      <title>Wakeboard Competition App Project</title>
      <link>https://ziggy6792.github.io/blogs/wakeboard-competition-app/</link>
      <pubDate>Thu, 19 Mar 2020 09:07:48 +0700</pubDate>
      
      <guid>https://ziggy6792.github.io/blogs/wakeboard-competition-app/</guid>
      <description>A short write up the Wakeboard Competition Management App; motivation, requirements, tools and design.</description>
    </item>
    
    <item>
      <title>Welcome to my blog</title>
      <link>https://ziggy6792.github.io/blogs/wellcome-to-my-blog/</link>
      <pubDate>Sun, 15 Mar 2020 09:07:48 +0700</pubDate>
      
      <guid>https://ziggy6792.github.io/blogs/wellcome-to-my-blog/</guid>
      <description>In this blog I aspire to detail my journey in adopting AWS Amplify, Cognito, AppSync and DynamoDb.</description>
    </item>
    
  </channel>
</rss>
